dnl Process this file with autoconf to produce a configure script.
AC_INIT(pxview, 0.2.4)
AC_CONFIG_SRCDIR(src/main.c)
AM_INIT_AUTOMAKE(AC_PACKAGE_NAME, AC_PACKAGE_VERSION)

AM_MAINTAINER_MODE
AM_CONFIG_HEADER(config.h)
AC_PROG_INTLTOOL

PXVIEW_MAJOR_VERSION=0
PXVIEW_MINOR_VERSION=2
PXVIEW_MICRO_VERSION=4
PXVIEW_VERSION=$PXVIEW_MAJOR_VERSION.$PXVIEW_MINOR_VERSION.$PXVIEW_MICRO_VERSION
PXVIEW_VERSION_INFO=`expr $PXVIEW_MAJOR_VERSION + $PXVIEW_MINOR_VERSION`:$PXVIEW_MICRO_VERSION:$PXVIEW_MINOR_VERSION

AC_SUBST(PXVIEW_MAJOR_VERSION)
AC_SUBST(PXVIEW_MINOR_VERSION)
AC_SUBST(PXVIEW_MICRO_VERSION)
AC_SUBST(PXVIEW_VERSION)
AC_SUBST(PXVIEW_VERSION_INFO)

VERSION=${PXVIEW_VERSION}

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_CPP

dnl Add the languages which your application supports here.
ALL_LINGUAS="de"
AM_GLIB_GNU_GETTEXT
GETTEXT_PACKAGE=pxview
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", GETTEXT_PACKAGE)

AM_PROG_LIBTOOL

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_BIGENDIAN
AC_STRUCT_TM

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h unistd.h ctype.h dirent.h errno.h malloc.h)
AC_CHECK_HEADERS(stdarg.h sys/stat.h sys/types.h time.h)
AC_CHECK_HEADERS(stdlib.h sys/socket.h netinet/in.h arpa/inet.h)
AC_CHECK_HEADERS(netdb.h sys/time.h sys/select.h sys/mman.h)

dnl Checks for library functions.
AC_FUNC_STRFTIME
AC_CHECK_FUNCS(strdup strndup strerror snprintf)
AC_CHECK_FUNCS(finite isnand fp_class class fpclass)
AC_CHECK_FUNCS(strftime localtime)

AC_ARG_WITH(pxlib, [  --with-pxlib=DIR        Path to paradox library (/usr)])
if test -r ${withval}/include/paradox.h ; then
	PX_LIBDIR=-L${withval}/lib
	PX_INCLUDEDIR=-I${withval}/include 
else
  PX_LIBDIR=-L/usr
	PX_INCLUDEDIR=-I/usr/include 
fi

AC_CHECK_LIB(px, PX_timestamp2string,
  PX_LIBDIR="$PX_LIBDIR",
  AC_MSG_ERROR([libpx not found. You will need at least libpx 0.4.4]),
  "$PX_LIBDIR")

PX_LIBS=-lpx


AC_ARG_WITH(gsf, [  --with-gsf=DIR          Path to gsf library (/usr)],
if test "x$withval" = xno; then
	AC_MSG_RESULT("disable by user")
else
	if test -r ${withval}/include/libgsf-1/gsf/gsf-input.h ; then
		GSF_LIBDIR=-L${withval}/lib
		GSF_INCLUDEDIR="-I${withval}/include/libgsf-1 -I${withval}/include/glib-2.0 -I${withval}/lib/glib-2.0/include"
		try_gsf=true
	else
		if test -r /usr/include/libgsf-1/gsf/gsf-input.h ; then
			GSF_LIBDIR=-L/usr
			GSF_INCLUDEDIR="-I/usr/include/libgsf-1 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include"
			try_gsf=true
		else
			try_gsf=false
		fi
	fi

	if test "$try_gsf" = "true"; then
		AC_CHECK_LIB(gsf-1, gsf_input_read,
			GSF_LIBDIR="$GSF_LIBDIR -lgsf-1",
			AC_MSG_RESULT([libgsf-1 not found]),
			"$GSF_LIBDIR")

		GSF_LIBS=-lgsf-1
		AC_DEFINE(HAVE_GSF, 1, [Define if you have the gsf library.])
	fi
fi
)

AC_ARG_WITH(sqlite, [  --with-sqlite=DIR       Path to sqlite library (/usr)],
if test "x$withval" = xno; then
	AC_MSG_RESULT("disable by user")
else
	if test -r ${withval}/include/sqlite.h ; then
		SQLITE_LIBDIR=-L${withval}/lib
		SQLITE_INCLUDEDIR="-I${withval}/include"
		try_sqlite=true
	else
		if test -r /usr/include/sqlite.h ; then
			SQLITE_LIBDIR=-L/usr
			SQLITE_INCLUDEDIR="-I/usr/include"
			try_sqlite=true
		else
			AC_MSG_ERROR(header file for sqlite not found)
			try_sqlite=false
		fi
	fi

	if test "$try_sqlite" = "true"; then
		AC_CHECK_LIB(sqlite, sqlite_open,
			SQLITE_LIBDIR="$SQLITE_LIBDIR -lsqlite",
			AC_MSG_RESULT([libsqlite not found]),
			"$SQLITE_LIBDIR")

		SQLITE_LIBS=-lsqlite
		AC_DEFINE(HAVE_SQLITE, 1, [Define if you have the sqlite library.])
	fi
fi
)

AC_CHECK_PROG(DOC_TO_MAN, docbook-to-man, docbook-to-man)
if test ! "$DOC_TO_MAN" ; then
	DOCDIR=
	AC_MSG_RESULT([docbook-to-man could not be found. I will not build man pages!])
else
	DOCDIR=doc
fi

dnl
dnl Extra flags
dnl

AC_ARG_WITH(memory-debug, [  --with-memory-debug     Adds extra code for memory debugging])
if test "x$with_memory_debug" = "xyes" ; then
	AC_DEFINE(MEMORY_DEBUGGING, 1, [Define if you want memory debugging.])
fi

AC_SUBST(PX_LIBDIR)
AC_SUBST(PX_LIBS)
AC_SUBST(PX_INCLUDEDIR)

AC_SUBST(GSF_LIBDIR)
AC_SUBST(GSF_LIBS)
AC_SUBST(GSF_INCLUDEDIR)

AC_SUBST(SQLITE_LIBDIR)
AC_SUBST(SQLITE_LIBS)
AC_SUBST(SQLITE_INCLUDEDIR)

AC_SUBST(DOCDIR)
AC_SUBST(DOC_TO_MAN)

dnl AC_DEFINE_UNQUOTED(PXVIEW_MAJOR_VERSION, "$PXVIEW_MAJOR_VERSION", PXVIEW_MAJOR_VERSION)
dnl AC_DEFINE_UNQUOTED(PXVIEW_MINOR_VERSION, "$PXVIEW_MINOR_VERSION", PXVIEW_MINOR_VERSION)
dnl AC_DEFINE_UNQUOTED(PXVIEW_MICRO_VERSION, "$PXVIEW_MICRO_VERSION", PXVIEW_MICRO_VERSION)

dnl pxlib.spec
AC_OUTPUT([
pxview.spec
Makefile
src/Makefile
doc/Makefile
po/Makefile.in
])

echo "

Configuration:
  Prefix:     ${prefix}

"

