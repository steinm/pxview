<!doctype refentry PUBLIC "-//OASIS//DTD DocBook V4.1//EN" [

<!-- Process this file with docbook-to-man to generate an nroff manual
     page: `docbook-to-man manpage.sgml > manpage.1'.  You may view
     the manual page with: `docbook-to-man manpage.sgml | nroff -man |
     less'.  A typical entry in a Makefile or Makefile.am is:

manpage.1: manpage.sgml
	docbook-to-man $< > $@

    
	The docbook-to-man binary is found in the docbook-to-man package.
	Please remember that if you create the nroff version in one of the
	debian/rules file targets (such as build), you will need to include
	docbook-to-man in your Build-Depends control field.

  -->

  <!-- Fill in your name for FIRSTNAME and SURNAME. -->
  <!ENTITY dhfirstname "<firstname>Uwe</firstname>">
  <!ENTITY dhsurname   "<surname>Steinmann</surname>">
  <!-- Please adjust the date whenever revising the manpage. -->
  <!ENTITY dhdate      "<date>April 29, 2003</date>">
  <!-- SECTION should be 1-8, maybe w/ subsection other parameters are
       allowed: see man(7), man(1). -->
  <!ENTITY dhsection   "<manvolnum>1</manvolnum>">
  <!ENTITY dhemail     "<email>uwe@steinmann.cx</email>">
  <!ENTITY dhusername  "Uwe Steinmann">
  <!ENTITY dhucpackage "<refentrytitle>PXVIEW</refentrytitle>">
  <!ENTITY dhpackage   "pxview">

  <!ENTITY debian      "<productname>Debian</productname>">
  <!ENTITY gnu         "<acronym>GNU</acronym>">
  <!ENTITY gpl         "&gnu; <acronym>GPL</acronym>">
]>

<refentry>
  <refentryinfo>
    <address>
      &dhemail;
    </address>
    <author>
      &dhfirstname;
      &dhsurname;
    </author>
    <copyright>
      <year>2003</year>
      <holder>&dhusername;</holder>
    </copyright>
    &dhdate;
  </refentryinfo>
  <refmeta>
    &dhucpackage;

    &dhsection;
  </refmeta>
  <refnamediv>
    <refname>&dhpackage;</refname>

    <refpurpose>pxview reads Paradox files and shows information or dumps the records</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>&dhpackage;</command>

      <arg><option>-h | --help <replaceable></replaceable></option></arg>

      <arg><option>-i | --info <replaceable></replaceable></option></arg>
      <arg><option>-c | --csv <replaceable></replaceable></option></arg>
      <arg><option>-s | --sql <replaceable></replaceable></option></arg>
      <arg><option>-t | --schema <replaceable></replaceable></option></arg>
      <arg><option>-o FILE | --output=FILE <replaceable></replaceable></option></arg>
      <arg><option>-b FILE | --blobfile=FILE <replaceable></replaceable></option></arg>
      <arg><option>-p PREFIX | --blobprefix=PREFIX <replaceable></replaceable></option></arg>
      <arg>FILE </arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>DESCRIPTION</title>

    <para>This manual page documents the
      <command>&dhpackage;</command> command.</para>

    <para>&dhpackage; reads Paradox files and prints information about
		  the file or dumps the records to stdout or a file. &dhpackage; is mostly
			applied on Paradox .DB files but can also be used to show
			information about other Paradox files.
      </para>
		<para>&dhpackage; can be used to convert Paradox databases into spreadsheet
		  readable CSV files (comma separated values) or SQL insert statements to
			import the records into a relational database.</para>
		<para>The programm currently supports only a subset of possible field
		  types.  These are strings, short and long integers and decimal
			numbers.</para>

  </refsect1>
  <refsect1>
    <title>OPTIONS</title>

    <para>The program follow the usual &gnu; command line syntax,
      with long options starting with two dashes (`-').  A summary of
      options is included below.</para>

    <variablelist>
      <varlistentry>
        <term><option>-h</option>
          <option>--help</option>
        </term>
        <listitem>
          <para>Show summary of options.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-v</option>
          <option>--version</option>
        </term>
        <listitem>
          <para>Show version of program.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-i</option>
          <option>--info</option>
        </term>
        <listitem>
          <para>Show information about Paradox file. If no other output format
					 is specified this will be the default.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-t</option>
          <option>--schema</option>
        </term>
        <listitem>
          <para>Dump schema of database as it is created by the official
					 Paradox software, when a database is exported in CSV format.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-c</option>
          <option>--csv</option>
        </term>
        <listitem>
          <para>Dump data records in CSV format. If this option follows
					  -s or --sql it will override it.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-s</option>
          <option>--sql</option>
        </term>
        <listitem>
          <para>Dump data records in SQL format. If this option follows
					  -c or --csv it will override it.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-o FILE</option>
          <option>--output=FILE</option>
        </term>
        <listitem>
          <para>Dump records into given file instead of stdout.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-b FILE</option>
          <option>--blobfile=FILE</option>
        </term>
        <listitem>
          <para>If the database files references blobs (binary large objects)
					 then read them from the
					 given file and write each blob into a single file. The filename will
					 be constructed from the blobprefix option, an underscore, the
					 internal number of the blob and the extension .blob.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-p PREFIX</option>
          <option>--blobprefix=PREFIX</option>
        </term>
        <listitem>
          <para>Use this prefix for each filename of a blob. You can write
				   all blobs into a single directory by specifying a valid directory
					 path name. You will have to make sure the directory exists before
					 running &dhpackage;.</para>
        </listitem>
      </varlistentry>
    </variablelist>

		<para>The none optional parameter FILE is the Paradox file which shall
		  be read.</para>
  </refsect1>
  <refsect1>
    <title>AUTHOR</title>

    <para>This manual page was written by &dhusername; &lt;&dhemail;&gt; for
      the &debian; system (but may be used by others).  Permission is
      granted to copy, distribute and/or modify this document under
      the terms of the &gnu; Free Documentation
      License, Version 1.1 or any later version published by the Free
      Software Foundation; with no Invariant Sections, no Front-Cover
      Texts and no Back-Cover Texts.</para>

  </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->


